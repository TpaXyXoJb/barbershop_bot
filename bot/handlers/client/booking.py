from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from .start import menu_keyboard

router = Router()

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: —Å–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ —É—Å–ª—É–≥
fake_masters = ["–ê–Ω–Ω–∞", "–ò–≤–∞–Ω", "–ú–∞—Ä–∏—è"]
fake_categories = ["–ú—É–∂—Å–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏", "–ñ–µ–Ω—Å–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏"]


def get_masters_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=name, callback_data=f"select_master:{name}")]
        for name in fake_masters
    ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="menu")
    ])
    return keyboard


def get_categories_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=cat, callback_data=f"select_category:{cat}")]
        for cat in fake_categories
    ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="book_appointment")
    ])
    return keyboard


@router.callback_query(F.data == "book_appointment")
async def choose_master(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞:", reply_markup=get_masters_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "menu")
async def go_back_to_menu(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=menu_keyboard
    )
    await callback.answer()


@router.callback_query(F.data.startswith("select_master:"))
async def choose_category(callback: types.CallbackQuery):
    master = callback.data.split(":")[1]
    await callback.message.edit_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞—Å—Ç–µ—Ä–∞: {master}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥–∏:",
        reply_markup=get_categories_keyboard()
    )
    await callback.answer()
